// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTimeDemo.Data;

#nullable disable

namespace NodaTimeDemo.Data.Migrations
{
    [DbContext(typeof(NodaTimeDemoDbContext))]
    partial class NodaTimeDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NodaTimeDemo.Data.Models.TimezoneConversionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ConvertedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConvertedInstant")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ConvertedLocalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OriginalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OriginalInstant")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OriginalLocalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalTimeZone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("OriginalUtcDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TargetTimeZone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("UsesNodaTimeInstant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("TimezoneConversions");
                });
#pragma warning restore 612, 618
        }
    }
}
